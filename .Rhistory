my_clusters_2 <- cluster_louvain(g3)
sizes(my_clusters_2)
#Make graph object removing small communities based on g2 clusters
g3  <- induced_subgraph(g2, keep)
layout_fr_2 <- layout_fr[keep,]
length(my_clusters_2)
plot(my_clusters_2, g3,
col=colors,
vertex.label = NA,
vertex.size=3,
edge.color = "lightgray",
edge.width = 0.2,
layout=layout_fr_2,
edge.curved = TRUE,
mark.groups = NULL)
#Create graph object only including terms that appear in at least 3 records
#Can play around with this setting
g <- create_network(dfm, min_studies=3)
?create_dfm
?create_network
#Set layout
layout_fr = layout_with_fr(g)
#Plot network
plot(g, edge.color = "lightgray", edge.width = 0.2, vertex.size = 2, vertex.label=NA, layout = layout_fr)
#Identify communities
my_clusters_1 <- cluster_louvain(g, weights = NULL)
sizes(my_clusters_1)
#Remove nodes with less than 5 edges
#play around this may--may not be necessary due to steps taken later to remove small clusters
isolated <- which(degree(g)==5)
g2 <- delete.vertices(g, isolated)
#Set layout
layout_fr = layout_with_fr(g2)
plot(g2, edge.color = "lightgray", edge.width = 0.2, vertex.size = 2, vertex.label=NA, layout = layout_fr)
my_clusters_1 <- cluster_louvain(g2, weights = NULL)
sizes(my_clusters_1)
## Identify which communities have fewer than 20 nodes (play around with this parameter)
small <- which(table(my_clusters_1$membership) < 20)
## Keep only nodes in communities with greater than 20 members (play around with this)
keep <- V(g2)[!(my_clusters_1$membership %in% small)]
#Make graph object removing small communities based on g2 clusters
g3  <- induced_subgraph(g2, keep)
#Redo communities and layout
my_clusters_2 <- cluster_louvain(g3)
sizes(my_clusters_2)
sizes(my_clusters_1)
## Identify which communities have fewer than 20 nodes (play around with this parameter)
small <- which(table(my_clusters_1$membership) < 60)
## Keep only nodes in communities with greater than 20 members (play around with this)
keep <- V(g2)[!(my_clusters_1$membership %in% small)]
#Make graph object removing small communities based on g2 clusters
g3  <- induced_subgraph(g2, keep)
#Redo communities and layout
my_clusters_2 <- cluster_louvain(g3)
sizes(my_clusters_2)
## Identify which communities have fewer than 20 nodes (play around with this parameter)
small <- which(table(my_clusters_1$membership) < 100)
## Keep only nodes in communities with greater than 20 members (play around with this)
keep <- V(g2)[!(my_clusters_1$membership %in% small)]
#Make graph object removing small communities based on g2 clusters
g3  <- induced_subgraph(g2, keep)
#Redo communities and layout
my_clusters_2 <- cluster_louvain(g3)
sizes(my_clusters_2)
plot(my_clusters_2, g3,
col=colors,
vertex.label = NA,
vertex.size=3,
edge.color = "lightgray",
edge.width = 0.2,
layout=layout_fr_2,
edge.curved = TRUE,
mark.groups = NULL)
plot(g3, layout=layout_fr_2)
plot(my_clusters_2, g3,
col=colors,
vertex.label = NA,
vertex.size=3,
edge.color = "lightgray",
edge.width = 0.2,
layout=layout_fr_2,
edge.curved = TRUE,
mark.groups = NULL)
sizes(my_clusters_2)
library(litsearchr)
library(igraph)
plot(my_clusters_2, g3,
col=colors,
vertex.label = NA,
vertex.size=3,
edge.color = "lightgray",
edge.width = 0.2,
layout=layout_fr_2,
edge.curved = TRUE,
mark.groups = NULL)
sizes(my_clusters_2)
colors <- c("#7FC97F", "#BEAED4", "#FDC086", "#FFFF99", "#A6CEE3", "#E78AC3")
plot(my_clusters_2, g3,
col=colors,
vertex.label = NA,
vertex.size=3,
edge.color = "lightgray",
edge.width = 0.2,
layout=layout_fr_2,
edge.curved = TRUE,
mark.groups = NULL)
colors <- c("#7FC97F", "#BEAED4", "#FDC086", "#FFFF99", "#A6CEE3", "#E78AC3")[membership(layout_fr_2)]
library(RColorBrewer)
library(tidyverse)
colors <- c("#7FC97F", "#BEAED4", "#FDC086", "#FFFF99", "#A6CEE3", "#E78AC3")[membership(layout_fr_2)]
colors
View(lou2)
View(layout_fr_2)
View(my_clusters_2)
my_clusters_2
View(my_clusters_2)
sizes(my_clusters_1)
#Load libraries
library(litsearchr)
library(igraph)
library(RColorBrewer)
library(tidyverse)
colors <- c("#7FC97F", "#BEAED4", "#FDC086", "#FFFF99", "#A6CEE3", "#E78AC3")[membership(layout_fr_2)]
sizes(my_clusters_2)
sizes(my_clusters_1)
plot(g2, edge.color = "lightgray", edge.width = 0.2, vertex.size = 2, vertex.label=NA, layout = layout_fr)
#Identify communities
my_clusters_1 <- cluster_louvain(g2, weights = NULL)
sizes(my_clusters_1)
## Identify which communities have fewer than 20 nodes (play around with this parameter)
small <- which(table(my_clusters_1$membership) < 20)
## Keep only nodes in communities with greater than 20 members (play around with this)
keep <- V(g2)[!(my_clusters_1$membership %in% small)]
#Make graph object removing small communities based on g2 clusters
g3  <- induced_subgraph(g2, keep)
#Redo communities and layout
my_clusters_2 <- cluster_louvain(g3)
layout_fr_2 <- layout_fr[keep,]
sizes(my_clusters_2)
plot(my_clusters_2, g3,
col=colors,
vertex.label = NA,
vertex.size=3,
edge.color = "lightgray",
edge.width = 0.2,
layout=layout_fr_2,
edge.curved = TRUE,
mark.groups = NULL)
colors <- c("#7FC97F", "#BEAED4", "#FDC086", "#FFFF99", "#A6CEE3", "#E78AC3")[membership(layout_fr_2)]
node_colors <- colors[membership(layout_fr_2)]
#Set colors for nodes
colors <- c("#7FC97F", "#BEAED4", "#FDC086", "#FFFF99", "#A6CEE3", "#E78AC3")
node_colors <- colors[membership(layout_fr_2)]
node_colors <- colors[membership]
color_palette <- c("#7FC97F", "#BEAED4", "#FDC086", "#FFFF99", "#A6CEE3", "#E78AC3")
node_colors <- color_palette[membership]
node_colors <- color_palette[(membership - 1) %% length(color_palette) + 1]
plot(my_clusters_2, g3,
col=colors,
vertex.label = NA,
vertex.size=3,
edge.color = "lightgray",
edge.width = 0.2,
layout=layout_fr_2,
edge.curved = TRUE,
mark.groups = NULL)
sizes(my_clusters_2)
plot(my_clusters_2, g3,
col=color_palette,
vertex.label = NA,
vertex.size=3,
edge.color = "lightgray",
edge.width = 0.2,
layout=layout_fr_2,
edge.curved = TRUE,
mark.groups = NULL)
plot(g3,
col=color_palette,
vertex.label = NA,
vertex.size=3,
edge.color = "lightgray",
edge.width = 0.2,
layout=layout_fr_2,
edge.curved = TRUE,
mark.groups = NULL)
plot(my_clusters_2, g3,
col=color_palette,
vertex.label = NA,
vertex.size=3,
edge.color = "lightgray",
edge.width = 0.2,
layout=layout_fr_2,
edge.curved = TRUE,
mark.groups = NULL)
V(g3)$color <- my_clusters_2$membership + 1
plot(g3)
color_palette <- c("#7FC97F", "#BEAED4", "#FDC086", "#FFFF99", "#A6CEE3", "#E78AC3")
plot(my_clusters_2, g3,
col=color_palette,
vertex.label = NA,
vertex.size=3,
edge.color = "lightgray",
edge.width = 0.2,
layout=layout_fr_2,
edge.curved = TRUE,
mark.groups = NULL)
plot(my_clusters_2, g3,
#col=color_palette,
vertex.label = NA,
vertex.size=3,
edge.color = "lightgray",
edge.width = 0.2,
layout=layout_fr_2,
edge.curved = TRUE,
mark.groups = NULL)
sizes(my_clusters_2)
i <- V(g3)$name %in% names(membership(my_clusters_2))
V(g3)$color[i] <- color_palette[membership(clu)]
V(g3)$color[i] <- color_palette[membership(my_clusters_2)]
plot(my_clusters_2, g3,
#col=color_palette,
vertex.label = NA,
vertex.size=3,
edge.color = "lightgray",
edge.width = 0.2,
layout=layout_fr_2,
edge.curved = TRUE,
mark.groups = NULL)
plot(my_clusters_2, g3,
#col=color_palette,
vertex.label = NA,
vertex.size=3,
edge.color = "lightgray",
edge.width = 0.2,
layout=layout_fr_2,
edge.curved = TRUE,
mark.groups=communities(my_clusters_2))
plot(my_clusters_2, g3,
col=color_palette,
vertex.label = NA,
vertex.size=3,
edge.color = "lightgray",
edge.width = 0.2,
layout=layout_fr_2,
edge.curved = TRUE,
mark.groups=NULL)
plot(my_clusters_2, g3,
#col=color_palette,
vertex.label = NA,
vertex.size=3,
edge.color = "lightgray",
edge.width = 0.2,
layout=layout_fr_2,
edge.curved = TRUE,
mark.groups=NULL)
plot(g3,
#col=color_palette,
vertex.label = NA,
vertex.size=3,
edge.color = "lightgray",
edge.width = 0.2,
layout=layout_fr_2,
edge.curved = TRUE,
mark.groups=NULL)
#Create graph object only including terms that appear in at least 3 records
#Can play around with this setting
g <- create_network(dfm, min_studies=3)
#Remove nodes with less than 5 edges
#play around this may--may not be necessary due to steps taken later to remove small clusters
isolated <- which(degree(g)==5)
g2 <- delete.vertices(g, isolated)
#Set layout
layout_fr = layout_with_fr(g2)
plot(g2, edge.color = "lightgray", edge.width = 0.2, vertex.size = 2, vertex.label=NA, layout = layout_fr)
#Identify communities
my_clusters_1 <- cluster_louvain(g2, weights = NULL)
sizes(my_clusters_1)
## Identify which communities have fewer than 20 nodes (play around with this parameter)
small <- which(table(my_clusters_1$membership) < 20)
## Keep only nodes in communities with greater than 20 members (play around with this)
keep <- V(g2)[!(my_clusters_1$membership %in% small)]
#Make graph object removing small communities based on g2 clusters
g3  <- induced_subgraph(g2, keep)
#Redo communities and layout
my_clusters_2 <- cluster_louvain(g3)
layout_fr_2 <- layout_fr[keep,]
sizes(my_clusters_2)
color_palette <- c("#7FC97F", "#BEAED4", "#FDC086", "#FFFF99", "#A6CEE3", "#E78AC3")
i <- V(g3)$name %in% names(membership(my_clusters_2))
V(g3)$color[i] <- color_palette[membership(my_clusters_2)]
plot(g3,
vertex.label = NA,
vertex.size=3,
edge.color = "lightgray",
edge.width = 0.2,
layout=layout_fr_2,
edge.curved = TRUE,
mark.groups=NULL)
cluster_grps_names <- cbind(V(g3)$name, my_clusters_2$membership)
phrase_counts <- sapply(extracted_terms, function(phrase) sum(str_count(docs, phrase)))
result_df <- data.frame(Phrase = names(phrase_counts), Count = as.vector(phrase_counts))
View(result_df)
word_freq_cluster <- merge(cluster_grps_names, result_df, by.x = "V1", by.y = "Phrase", all.x = TRUE)
word_freq_cluster_sub <- subset(word_freq_cluster, Count != 0)
wc1 <- word_freq_cluster_sub %>%
filter(V2 == 1) %>%
with(wordcloud(V1, Count, min.freq = 1,
#max.words=100,
random.order=FALSE,
rot.per=0,
colors = brewer.pal(8, "Dark2")))
library(wordcloud)
wc2 <- word_freq_cluster_sub %>%
filter(V2 == 2) %>%
with(wordcloud(V1, Count, min.freq = 1,
#max.words=100,
random.order=FALSE,
rot.per=0,
colors = brewer.pal(8, "Dark2")))
png(filename="plots/wc2.png")
wc2 <- word_freq_cluster_sub %>%
filter(V2 == 2) %>%
with(wordcloud(V1, Count, min.freq = 1,
#max.words=100,
random.order=FALSE,
rot.per=0,
colors = brewer.pal(8, "Dark2")))
dev.off()
png(filename="plots/wc1.png")
wc1 <- word_freq_cluster_sub %>%
filter(V2 == 1) %>%
with(wordcloud(V1, Count, min.freq = 1,
#max.words=100,
random.order=FALSE,
rot.per=0,
colors = brewer.pal(8, "Dark2")))
dev.off()
png(filename="plots/wc2.png")
wc2 <- word_freq_cluster_sub %>%
filter(V2 == 2) %>%
with(wordcloud(V1, Count, min.freq = 1,
#max.words=100,
random.order=FALSE,
rot.per=0,
colors = brewer.pal(8, "Dark2")))
dev.off()
png(filename="plots/wc3.png")
wc3 <- word_freq_cluster_sub %>%
filter(V2 == 3) %>%
with(wordcloud(V1, Count, min.freq = 1,
#max.words=100,
random.order=FALSE,
rot.per=0,
colors = brewer.pal(8, "Dark2")))
dev.off()
png(filename="plots/wc4.png")
wc4 <- word_freq_cluster_sub %>%
filter(V2 == 4) %>%
with(wordcloud(V1, Count, min.freq = 1,
#max.words=100,
random.order=FALSE,
rot.per=0,
colors = brewer.pal(8, "Dark2")))
dev.off()
png(filename="plots/wc5.png")
wc5 <- word_freq_cluster_sub %>%
filter(V2 == 5) %>%
with(wordcloud(V1, Count, min.freq = 1,
#max.words=100,
random.order=FALSE,
rot.per=0,
colors = brewer.pal(8, "Dark2")))
dev.off()
png(filename="plots/wc7.png")
wc7 <- word_freq_cluster_sub %>%
filter(V2 == 7) %>%
with(wordcloud(V1, Count, min.freq = 1,
#max.words=100,
random.order=FALSE,
rot.per=0,
colors = brewer.pal(8, "Dark2")))
png(filename="plots/wc7.png")
wc7 <- word_freq_cluster_sub %>%
filter(V2 == 6) %>%
with(wordcloud(V1, Count, min.freq = 1,
#max.words=100,
random.order=FALSE,
rot.per=0,
colors = brewer.pal(8, "Dark2")))
dev.off()
library(wordcloud)
png(filename="plots/wc1.png")
wc1 <- word_freq_cluster_sub %>%
filter(V2 == 1) %>%
with(wordcloud(V1, Count, min.freq = 1,
#max.words=100,
random.order=FALSE,
rot.per=0,
colors = brewer.pal(8, "Dark2")))
library(tidyverse)
png(filename="plots/wc1.png")
wc1 <- word_freq_cluster_sub %>%
filter(V2 == 1) %>%
with(wordcloud(V1, Count, min.freq = 1,
#max.words=100,
random.order=FALSE,
rot.per=0,
colors = brewer.pal(8, "Dark2")))
dev.off()
png(filename="plots/wc2.png")
wc2 <- word_freq_cluster_sub %>%
filter(V2 == 2) %>%
with(wordcloud(V1, Count, min.freq = 1,
#max.words=100,
random.order=FALSE,
rot.per=0,
colors = brewer.pal(8, "Dark2")))
dev.off()
png(filename="plots/wc3.png")
wc3 <- word_freq_cluster_sub %>%
filter(V2 == 3) %>%
with(wordcloud(V1, Count, min.freq = 1,
#max.words=100,
random.order=FALSE,
rot.per=0,
colors = brewer.pal(8, "Dark2")))
dev.off()
png(filename="plots/wc4.png")
wc4 <- word_freq_cluster_sub %>%
filter(V2 == 4) %>%
with(wordcloud(V1, Count, min.freq = 1,
#max.words=100,
random.order=FALSE,
rot.per=0,
colors = brewer.pal(8, "Dark2")))
dev.off()
png(filename="plots/wc5.png")
wc5 <- word_freq_cluster_sub %>%
filter(V2 == 5) %>%
with(wordcloud(V1, Count, min.freq = 1,
#max.words=100,
random.order=FALSE,
rot.per=0,
colors = brewer.pal(8, "Dark2")))
dev.off()
png(filename="plots/wc6.png")
wc6 <- word_freq_cluster_sub %>%
filter(V2 == 6) %>%
with(wordcloud(V1, Count, min.freq = 1,
#max.words=100,
random.order=FALSE,
rot.per=0,
colors = brewer.pal(8, "Dark2")))
dev.off()
library(wordcloud)
library(patchwork)
wc1 <- word_freq_cluster_sub %>%
filter(V2 == 1) %>%
with(wordcloud(V1, Count, min.freq = 1,
#max.words=100,
random.order=FALSE,
rot.per=0,
colors = brewer.pal(8, "Dark2")))
library(tidyverse)
wc1 <- word_freq_cluster_sub %>%
filter(V2 == 1) %>%
with(wordcloud(V1, Count, min.freq = 1,
#max.words=100,
random.order=FALSE,
rot.per=0,
colors = brewer.pal(8, "Dark2")))
wc2 <- word_freq_cluster_sub %>%
filter(V2 == 2) %>%
with(wordcloud(V1, Count, min.freq = 1,
#max.words=100,
random.order=FALSE,
rot.per=0,
colors = brewer.pal(8, "Dark2")))
wc3 <- word_freq_cluster_sub %>%
filter(V2 == 3) %>%
with(wordcloud(V1, Count, min.freq = 1,
#max.words=100,
random.order=FALSE,
rot.per=0,
colors = brewer.pal(8, "Dark2")))
wc4 <- word_freq_cluster_sub %>%
filter(V2 == 4) %>%
with(wordcloud(V1, Count, min.freq = 1,
#max.words=100,
random.order=FALSE,
rot.per=0,
colors = brewer.pal(8, "Dark2")))
wc5 <- word_freq_cluster_sub %>%
filter(V2 == 5) %>%
with(wordcloud(V1, Count, min.freq = 1,
#max.words=100,
random.order=FALSE,
rot.per=0,
colors = brewer.pal(8, "Dark2")))
wc6 <- word_freq_cluster_sub %>%
filter(V2 == 6) %>%
with(wordcloud(V1, Count, min.freq = 1,
#max.words=100,
random.order=FALSE,
rot.per=0,
colors = brewer.pal(8, "Dark2")))
final_plot <- wc1 + wc2 + wc3 +
wc4 + wc5 + wc6 +
plot_layout(ncol = 3)
final_plot <- plot_layout(ncol=3, wc1, wc2, wc3, wc4, wc5, wc6)
final_plot
wc1 + wc2 + wc3 + wc4 + wc5 + wc6
